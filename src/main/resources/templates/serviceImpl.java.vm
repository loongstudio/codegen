package ${package.ServiceImpl};

import ${package.Entity}.${entity};
import ${package.Mapper}.${table.mapperName};
import ${package.Service}.${table.serviceName};
import ${superServiceImplClassPackage};
import org.springframework.stereotype.Service;

/**
 * ${table.serviceImplName}
 *
 * @author ${author}
 * @version 1.0.0
 * @since ${date}
 */
@Service
public class ${table.serviceImplName} extends ${superServiceImplClass}<${table.mapperName}, ${entity}> implements ${table.serviceName} {

private final ${table.mapperName} mapper;

private final ExcelUploader uploader;

private final ExcelDownloader downloader;

public ${table.serviceImplName}(${table.mapperName} mapper, ExcelDownloader downloader, ExcelUploader uploader) {
        this.mapper = mapper;
        this.downloader = downloader;
        this.uploader = uploader;
        }

@Override
public IPage<${entity}> list(OperationEntity operationEntity,QueryWrapper<${entity}> queryWrapper){
        return super.page(new Page<>(operationEntity.getPageNo(),operationEntity.getPageSize()),queryWrapper);
        }

@Override
public ${entity} show(String id){
        return super.getById(id);
        }

@Override
public void create(${entity} entity){
        super.save(entity);
        }

@Override
public void edit(${entity} entity){
        super.updateById(entity);
        }

@Override
public void delete(List<String> idList){
        super.removeByIds(idList);
        }

@Override
public void upload(MultipartFile file,Class<${entity}> clazz){
        List<${entity}> entityList=uploader.upload(file,clazz);
        if (CollectionUtils.isEmpty(entityList)) {
        return;
        }
        super.saveBatch(entityList,entityList.size());
        }

@Override
public void download(HttpServletResponse response,Class<${entity}> clazz,QueryWrapper<${entity}> queryWrapper,OperationEntity operationEntity)throws Exception{
        OperationEntity.Excel excel = operationEntity.getExcel();
        ExcelOption excelOption = new ExcelOption();
        excelOption.setName(excel.getName());
        excelOption.setFieldList(excel.getFieldList());
        downloader.download(response,clazz,excelOption,list(operationEntity,queryWrapper).getRecords());
        }

        }

